mutate(Polly=as.numeric(cba.bruto$Polly)) %>%
mutate(Itasa=as.numeric(cba.bruto$Itasa)) %>%
mutate(Sabor.Sul=as.numeric(cba.bruto$Sabor.Sul)) %>%
mutate(Caldo.Gostoso=as.numeric(cba.bruto$Caldo.Gostoso)) %>%
mutate(Sol=as.numeric(cba.bruto$Sol)) %>%
mutate(Anaconda=as.numeric(cba.bruto$Anaconda)) %>%
mutate(Tradição=as.numeric(cba.bruto$Tradição)) %>%
mutate(Rampinelli=as.numeric(cba.bruto$Rampinelli)) %>%
mutate(Sabor.Sul.1=as.numeric(cba.bruto$Sabor.Sul.1)) %>%
mutate(Tio.João=as.numeric(cba.bruto$Tio.João)) %>%
mutate(Caboclo=as.numeric(cba.bruto$Caboclo)) %>%
mutate(Mellita=as.numeric(cba.bruto$Mellita)) %>%
mutate(Itamaraty=as.numeric(cba.bruto$Itamaraty)) %>%
mutate(Alto.Alegre=as.numeric(cba.bruto$Alto.Alegre)) %>%
mutate(Estrela=as.numeric(cba.bruto$Estrela)) %>%
mutate(Doceçúcar=as.numeric(cba.bruto$Doceçúcar)) %>%
mutate(Liza=as.numeric(cba.bruto$Liza)) %>%
mutate(Coamo=as.numeric(cba.bruto$Coamo)) %>%
mutate(Concórdia=as.numeric(cba.bruto$Concórdia)) %>%
mutate(Qualy=as.numeric(cba.bruto$Qualy)) %>%
mutate(Delícia=as.numeric(cba.bruto$Delícia)) %>%
mutate(Doriana=as.numeric(cba.bruto$Doriana)) %>%
mutate(Pão=as.numeric(cba.bruto$Pão)) %>%
mutate(Batata=as.numeric(cba.bruto$Batata)) %>%
mutate(Tomate=as.numeric(cba.bruto$Tomate)) %>%
mutate(Banana=as.numeric(cba.bruto$Banana)) %>%
mutate(Patinho=as.numeric(cba.bruto$Patinho)) %>%
mutate(Coxão.duro.posta=as.numeric(cba.bruto$Coxão.duro.posta)) %>%
mutate(Coxão.mole=as.numeric(cba.bruto$Coxão.mole))
na_indices <- is.na(cba.bruto$Caldo.Gostoso)
dados_com_na <- cba.bruto$Data[na_indices]
print(dados_com_na)
# Verificar se há valores 'NA' na coluna 'Data'
indices_na <- which(is.na(cba.bruto$Data))
# Verificar a quantidade de índices 'NA' encontrados
print(length(indices_na))
# Exibir os índices 'NA' encontrados
print(indices_na)
# Verificar se todas as colunas são numéricas
todas_numericas <- sapply(cba.bruto, is.numeric)
print(todas_numericas)
if (all(todas_numericas)) {
print("Todos os dados são números.")
} else {
print("Há colunas que contêm dados não numéricos.")
}
str(cba.bruto2)
dim(cba.bruto2)
x <- 2 + 2
print(x)
all(is.na(cba.bruto2$Data))
cba.bruto2$Data <- mdy(cba.bruto2$Data)
dados_agrupados <- cba.bruto2 %>%
mutate(ano = lubridate::year(Data), mes = lubridate::month(Data)) %>%
group_by(ano, mes)
Frimesa <- dados_agrupados %>%
summarise(media = round(mean(Frimesa, na.rm = TRUE), 2))
Líder <- dados_agrupados %>%
summarise(media = round(mean(Líder, na.rm = TRUE), 2))
Polly <- dados_agrupados %>%
summarise(media = round(mean(Polly, na.rm = TRUE), 2))
media_final_geral_leite <- (Frimesa + Líder + Polly) / 3  #média final do produto
media.leite <- rename(media_final_geral_leite, Leite = media) #renomeando a coluna
media.leite$Leite <- round(media.leite$Leite * 7.5, 2) #multiplicando pela quantidade da CB
itasa <- dados_agrupados %>%
summarise(media = round(mean(Itasa, na.rm = TRUE), 2))
sabor.sul <- dados_agrupados %>%
summarise(media = round(mean(Sabor.Sul, na.rm = TRUE), 2))
caldo.gostoso <- dados_agrupados %>%
summarise(media = round(mean(Caldo.Gostoso, na.rm = TRUE), 2))
media_final_geral_feijao <- (itasa + sabor.sul + caldo.gostoso) / 3 #média final do produto
media.feijao <- rename(media_final_geral_feijao, Feijão = media) #renomeando a coluna
media.feijao <- mutate(media.feijao, Feijão = round(Feijão, 2)) #arredonando as casas decimais
media.feijao$Feijão <- round(media.feijao$Feijão * 4.5, 2) #multiplicando pela quantidade da CB
sol <- dados_agrupados %>%
summarise(media = round(mean(Sol, na.rm = TRUE), 2))
anaconda <- dados_agrupados %>%
summarise(media = round(mean(Anaconda, na.rm = TRUE), 2))
tradicao <- dados_agrupados %>%
summarise(media = round(mean(Tradição, na.rm = TRUE), 2))
media_final_geral_trigo <- (sol + anaconda + tradicao) / 3 #média final do produto
media.trigo <- rename(media_final_geral_trigo, Trigo = media) #renomeando a coluna
media.trigo <- mutate(media.trigo, Trigo = round(Trigo, 2)) #arredonando as casas decimais
media.trigo$Trigo <- round(media.trigo$Trigo * 0.3, 2) #multiplicando pela quantidade da CB
arroz1 <- dados_agrupados %>%
summarise(media = round(mean(Rampinelli, na.rm = TRUE), 2))
arroz2 <- dados_agrupados %>%
summarise(media = round(mean(Sabor.Sul.1, na.rm = TRUE), 2))
arroz3 <- dados_agrupados %>%
summarise(media = round(mean(Tio.João, na.rm = TRUE), 2))
media_final_geral_arroz <- (arroz1 + arroz2 + arroz3) / 3 #média final do produto
media.arroz <- rename(media_final_geral_arroz, Arroz = media) #renomeando a coluna
media.arroz <- mutate(media.arroz, Arroz = round(Arroz, 2)) #arredonando as casas decimais
media.arroz$Arroz <- media.arroz$Arroz * 0.6 #multiplicando pela quantidade da CB
cafe1 <- dados_agrupados %>%
summarise(media = round(mean(Caboclo, na.rm = TRUE), 2))
cafe2 <- dados_agrupados %>%
summarise(media = round(mean(Mellita, na.rm = TRUE), 2))
cafe3 <- dados_agrupados %>%
summarise(media = round(mean(Itamaraty, na.rm = TRUE), 2))
media_final_geral_cafe <- (cafe1 + cafe2 + cafe3) / 3 #média final do produto
media.cafe <- rename(media_final_geral_cafe, Café = media) #renomeando a coluna
media.cafe <- mutate(media.cafe, Café = round(Café, 2)) #arredonando as casas decimais
media.cafe$Café <- media.cafe$Café * 1.2 #multiplicando pela quantidade da CB
media.cafe <- mutate(media.cafe, Café = round(Café, 2))
acucar1 <- dados_agrupados %>%
summarise(media = round(mean(Alto.Alegre, na.rm = TRUE), 2))
acucar2 <- dados_agrupados %>%
summarise(media = round(mean(Estrela, na.rm = TRUE), 2))
acucar3 <- dados_agrupados %>%
summarise(media = round(mean(Doceçúcar, na.rm = TRUE), 2))
media_final_geral_acucar <- (acucar1 + acucar2 + acucar3) / 3
media.acucar <- rename(media_final_geral_acucar, Açúcar = media)
media.acucar <- mutate(media.acucar, Açúcar = round(Açúcar, 2))
media.acucar$Açúcar <- media.acucar$Açúcar * 0.6
media.acucar <- mutate(media.acucar, Açúcar = round(Açúcar, 2))
oleo1 <- dados_agrupados %>%
summarise(media = round(mean(Liza, na.rm = TRUE), 2))
oleo2 <- dados_agrupados %>%
summarise(media = round(mean(Coamo, na.rm = TRUE), 2))
oleo3 <- dados_agrupados %>%
summarise(media = round(mean(Concórdia, na.rm = TRUE), 2))
media_final_geral_oleo <- (oleo1 + oleo2 + oleo3) / 3
media.oleo <- rename(media_final_geral_oleo, Óleo = media)
media.oleo <- mutate(media.oleo, Óleo = round(Óleo, 2))
media.oleo$Óleo <- media.oleo$Óleo * 1
media.oleo <- mutate(media.oleo, Óleo = round(Óleo, 2))
margarina1 <- dados_agrupados %>%
summarise(media = round(mean(Qualy, na.rm = TRUE), 2))
margarina2 <- dados_agrupados %>%
summarise(media = round(mean(Delícia, na.rm = TRUE), 2))
margarina3 <- dados_agrupados %>%
summarise(media = round(mean(Doriana, na.rm = TRUE), 2))
media_final_geral_margarina <- (margarina1 + margarina2 + margarina3) / 3
media.margarina <- rename(media_final_geral_margarina, Margarina = media)
media.margarina <- mutate(media.margarina, Margarina = round(Margarina, 2))
media.margarina$Margarina <- media.margarina$Margarina * 1.5
media.margarina <- mutate(media.margarina, Margarina = round(Margarina, 2))
pao <- dados_agrupados %>%
summarise(media = round(mean(Pão, na.rm = TRUE), 2))
media.pao <- rename(pao, Pão = media)
media.pao$Pão <- media.pao$Pão * 6
batata <- dados_agrupados %>%
summarise(media = round(mean(Batata, na.rm = TRUE), 2))
media.batata <- rename(batata, Batata = media)
media.batata$Batata <- media.batata$Batata * 6
tomate <- dados_agrupados %>%
summarise(media = round(mean(Tomate, na.rm = TRUE), 2))
media.tomate <- rename(tomate, Tomate = media)
media.tomate$Tomate <- media.tomate$Tomate * 9
banana <- dados_agrupados %>%
summarise(media = round(mean(Banana, na.rm = TRUE), 2))
media.banana <- rename(banana, Banana = media)
media.banana$Banana <- media.banana$Banana * 6
carne1 <- dados_agrupados %>%
summarise(media = round(mean(Patinho, na.rm = TRUE), 2))
carne2 <- dados_agrupados %>%
summarise(media = round(mean(Coxão.duro.posta, na.rm = TRUE), 2))
carne3 <- dados_agrupados %>%
summarise(media = round(mean(Coxão.mole, na.rm = TRUE), 2))
media_final_geral_carne <- (carne1 + carne2 + carne3) / 3
media.carne <- rename(media_final_geral_carne, Carne = media)
media.carne <- mutate(media.carne, Carne = round(Carne, 2))
media.carne$Carne <- media.carne$Carne * 6.60
media.carne <- mutate(media.carne, Carne = round(Carne, 2))
# Lista de data frames de produtos
lista_data_frames <- list(media.acucar, media.arroz, media.banana, media.batata,
media.cafe, media.feijao, media.carne, media.leite, media.margarina,
media.oleo, media.pao, media.tomate, media.trigo)
todos_anos <- 2018:2024  # Exemplo: de 2021 a 2024
# Criar uma sequência de todos os meses do ano
todos_meses <- 1:12
# Criar um data frame base com todas as combinações de anos e meses
todas_datas <- expand.grid(ano = todos_anos, mes = todos_meses)
# Função para realizar o left_join
join_func <- function(base, df) {
left_join(base, df, by = c("mes", "ano"))
}
# Aplicar a função left_join a todos os data frames de produtos
CBA <- Reduce(join_func, lista_data_frames)
CBA.liq <- mutate(CBA, Custo = rowSums(select(CBA, -ano, -mes), na.rm = TRUE))
excluir <- c("Açúcar","Arroz", "Banana", "Batata","Café","Feijão", "Carne","Leite",
"Margarina","Óleo", "Pão", "Tomate", "Trigo")
Cesta.basica <- CBA.liq[,!names(CBA.liq)%in%excluir]
Cesta.basica <- mutate(Cesta.basica, Custo = round(Custo, 2))
Cesta.basica$mes <- month(Cesta.basica$mes, label = TRUE, abbr = TRUE, locale = "pt")
view(Cesta.basica)
# Lista de data frames de produtos
produtos <- list(media_final_geral_leite, media_final_geral_feijao, media_final_geral_trigo,
media_final_geral_arroz, media_final_geral_cafe,
media_final_geral_acucar, media_final_geral_oleo,
media_final_geral_margarina, media_final_geral_carne)
produtos_todos_anos <- 2018:2024  # Exemplo: de 2021 a 2024
# Criar uma sequência de todos os meses do ano
produtos_todos_meses <- 1:12
# Criar um data frame base com todas as combinações de anos e meses
produtos_todas_datas <- expand.grid(ano = todos_anos, mes = todos_meses)
# Função para realizar o left_join
produtos_join <- function(base, df) {
left_join(base, df, by = c("mes", "ano"))
}
# Aplicar a função left_join a todos os data frames de produtos
produtos_CBA <- Reduce(produtos_join, produtos)
produtos_CBA$Data <- make_date(year = produtos_CBA$ano, month = produtos_CBA$mes)
produtos_CBA$mes_ano <- paste(month(produtos_CBA$Data, label = TRUE, abbr = TRUE),
year(produtos_CBA$Data))
view(Cesta.basica)
#### CUSTO TOTAL CBA
grafico <- ggplot(Cesta.basica, aes(x = Data, y = Custo)) +
geom_line() +
labs(x = "Data", y = "Custo da cesta de alimentos", title = "Custo da cesta de alimentos por mês e ano")
ggCBA <- ggplotly(grafico, dynamicTicks = T, n = 12)
ggCBA <- layout(ggCBA,
xaxis = list(nticks = 6),
yaxis = list(nticks = 4))
#### CUSTO TOTAL CBA
grafico <- ggplot(Cesta.basica, aes(x = Data, y = Custo)) +
geom_line() +
labs(x = "Data", y = "Custo da cesta de alimentos", title = "Custo da cesta de alimentos por mês e ano")
ggCBA <- ggplotly(grafico, dynamicTicks = T, n = 12)
# Criar uma nova coluna 'Data' combinando as colunas 'ano' e 'mes' em um formato de data
Cesta.basica$Data <- make_date(year = Cesta.basica$ano, month = Cesta.basica$mes)
Cesta.basica$mes_ano <- paste(month(Cesta.basica$Data, label = TRUE, abbr = TRUE),
year(Cesta.basica$Data))
#### CUSTO TOTAL CBA
grafico <- ggplot(Cesta.basica, aes(x = Data, y = Custo)) +
geom_line() +
labs(x = "Data", y = "Custo da cesta de alimentos", title = "Custo da cesta de alimentos por mês e ano")
ggCBA <- ggplotly(grafico, dynamicTicks = T, n = 12)
ggCBA <- layout(ggCBA,
xaxis = list(nticks = 6),
yaxis = list(nticks = 4))
print(ggCBA)
Sys.setenv("plotly_username"="lucaassbauer")
Sys.setenv("plotly_api_key"="0rMyg1RsWoF1ysEHwAfl")
api_create(ggCBA, filename = "ggCBA")
setwd('C:/Users/fluca/OneDrive/Cesta básica/Ajuste de base de dados')
sal.min <- read.csv("salário mínimo.csv")
setwd('C:/Users/fluca/OneDrive/Cesta básica/Ajuste de base de dados')
sal.min <- read.csv("salário mínimo.csv")
# Especifique o caminho do arquivo XLS
caminho_arquivo <- "C:/Users/fluca/OneDrive/Cesta básica/Ajuste de base de dados/salário mínimo.xls"
dados <- read_excel(caminho_arquivo)
colnames(dados)[2] <- "Salário Mínimo"
dados <- dados %>%
mutate(`Salário Mínimo`=as.numeric(dados$`Salário Mínimo`))
dados$Data <- as.Date(paste0(dados$Data, ".01"), format = "%Y.%m.%d")
dados <- dados %>%
filter(Data >= as.Date("2018-09-01") & Data <= as.Date("2024-05-01"))
dados2 <- merge(dados, Cesta.basica, by = "Data", all = TRUE)
dados2 <- subset(dados2, select = -c(mes_ano, ano, mes))
dados2 <- na.omit(dados2)
# Convertendo as colunas para numérico
dados2$`Salário Mínimo` <- as.numeric(dados2$`Salário Mínimo`)
dados2$Participação <- as.numeric(dados2$Custo)
# Criando o gráfico com dados normalizados
Participação <- ggplot(dados2, aes(x = Data)) +
geom_line(aes(y = `Salário Mínimo`, color = "Salário Mínimo")) +
geom_line(aes(y = Custo, color = "CBA")) +
labs(x = "Data", y = "Salário Mínimo", color = "Variável") +
theme_minimal()
Part <- ggplotly(Participação, dynamicTicks = T, n = 12)
Part <- layout(Part,
xaxis = list(nticks = 6),
yaxis = list(nticks = 6))
print(Part)
p <- plot_ly(layout(Part,
xaxis = list(nticks = 6),
yaxis = list(nticks = 6)))
Sys.setenv("plotly_username"="lucaassbauer")
Sys.setenv("plotly_api_key"="0rMyg1RsWoF1ysEHwAfl")
api_create(Part, filename = "9")
library(xtable)
library(summarytools)
library(basedosdados)
library(dplyr)
library(readr)
library(readxl)
library(writexl)
library(stringr)
library(lubridate)
library(magrittr)
library(scales)
library(ggplot2)
library(gganimate)
library(tidyr)
library(transformr)
library(plotly)
library(hrbrthemes)
library(ggthemes)
library(tidyverse)
View(media_final_geral_acucar)
View(produtos)
View(produtos)
View(produtos_CBA)
View(lista_data_frames)
View(CBA)
library(xtable)
library(summarytools)
library(basedosdados)
library(dplyr)
library(readr)
library(readxl)
library(writexl)
library(stringr)
library(lubridate)
library(magrittr)
library(scales)
library(ggplot2)
library(gganimate)
library(tidyr)
library(transformr)
library(plotly)
library(hrbrthemes)
library(ggthemes)
library(tidyverse)
rm(list=ls())
setwd('C:/Users/fluca/OneDrive/Cesta básica/Ajuste de base de dados')
cba_total <- read.csv("cálculo.csv")
str(cba_total)
excluir <- c("Carimbo.de.data.hora","Mercado", "Coletores", "X","X.1","X.2","X.3","X.4","X.5")
cba.bruto <- cba_total[,!names(cba_total)%in%excluir]
cba.bruto2 <- cba.bruto %>%
mutate(Frimesa=as.numeric(cba.bruto$Frimesa)) %>%
mutate(Líder=as.numeric(cba.bruto$Líder)) %>%
mutate(Polly=as.numeric(cba.bruto$Polly)) %>%
mutate(Itasa=as.numeric(cba.bruto$Itasa)) %>%
mutate(Sabor.Sul=as.numeric(cba.bruto$Sabor.Sul)) %>%
mutate(Caldo.Gostoso=as.numeric(cba.bruto$Caldo.Gostoso)) %>%
mutate(Sol=as.numeric(cba.bruto$Sol)) %>%
mutate(Anaconda=as.numeric(cba.bruto$Anaconda)) %>%
mutate(Tradição=as.numeric(cba.bruto$Tradição)) %>%
mutate(Rampinelli=as.numeric(cba.bruto$Rampinelli)) %>%
mutate(Sabor.Sul.1=as.numeric(cba.bruto$Sabor.Sul.1)) %>%
mutate(Tio.João=as.numeric(cba.bruto$Tio.João)) %>%
mutate(Caboclo=as.numeric(cba.bruto$Caboclo)) %>%
mutate(Mellita=as.numeric(cba.bruto$Mellita)) %>%
mutate(Itamaraty=as.numeric(cba.bruto$Itamaraty)) %>%
mutate(Alto.Alegre=as.numeric(cba.bruto$Alto.Alegre)) %>%
mutate(Estrela=as.numeric(cba.bruto$Estrela)) %>%
mutate(Doceçúcar=as.numeric(cba.bruto$Doceçúcar)) %>%
mutate(Liza=as.numeric(cba.bruto$Liza)) %>%
mutate(Coamo=as.numeric(cba.bruto$Coamo)) %>%
mutate(Concórdia=as.numeric(cba.bruto$Concórdia)) %>%
mutate(Qualy=as.numeric(cba.bruto$Qualy)) %>%
mutate(Delícia=as.numeric(cba.bruto$Delícia)) %>%
mutate(Doriana=as.numeric(cba.bruto$Doriana)) %>%
mutate(Pão=as.numeric(cba.bruto$Pão)) %>%
mutate(Batata=as.numeric(cba.bruto$Batata)) %>%
mutate(Tomate=as.numeric(cba.bruto$Tomate)) %>%
mutate(Banana=as.numeric(cba.bruto$Banana)) %>%
mutate(Patinho=as.numeric(cba.bruto$Patinho)) %>%
mutate(Coxão.duro.posta=as.numeric(cba.bruto$Coxão.duro.posta)) %>%
mutate(Coxão.mole=as.numeric(cba.bruto$Coxão.mole))
na_indices <- is.na(cba.bruto$Caldo.Gostoso)
dados_com_na <- cba.bruto$Data[na_indices]
print(dados_com_na)
# Verificar se há valores 'NA' na coluna 'Data'
indices_na <- which(is.na(cba.bruto$Data))
# Verificar a quantidade de índices 'NA' encontrados
print(length(indices_na))
# Exibir os índices 'NA' encontrados
print(indices_na)
# Verificar se todas as colunas são numéricas
todas_numericas <- sapply(cba.bruto, is.numeric)
print(todas_numericas)
if (all(todas_numericas)) {
print("Todos os dados são números.")
} else {
print("Há colunas que contêm dados não numéricos.")
}
str(cba.bruto2)
dim(cba.bruto2)
x <- 2 + 2
print(x)
all(is.na(cba.bruto2$Data))
cba.bruto2$Data <- mdy(cba.bruto2$Data)
dados_agrupados <- cba.bruto2 %>%
mutate(ano = lubridate::year(Data), mes = lubridate::month(Data)) %>%
group_by(ano, mes)
Frimesa <- dados_agrupados %>%
summarise(media = round(mean(Frimesa, na.rm = TRUE), 2))
Líder <- dados_agrupados %>%
summarise(media = round(mean(Líder, na.rm = TRUE), 2))
Polly <- dados_agrupados %>%
summarise(media = round(mean(Polly, na.rm = TRUE), 2))
media_final_geral_leite <- (Frimesa + Líder + Polly) / 3  #média final do produto
media.leite <- rename(media_final_geral_leite, Leite = media) #renomeando a coluna
media.leite$Leite <- round(media.leite$Leite * 7.5, 2) #multiplicando pela quantidade da CB
itasa <- dados_agrupados %>%
summarise(media = round(mean(Itasa, na.rm = TRUE), 2))
sabor.sul <- dados_agrupados %>%
summarise(media = round(mean(Sabor.Sul, na.rm = TRUE), 2))
caldo.gostoso <- dados_agrupados %>%
summarise(media = round(mean(Caldo.Gostoso, na.rm = TRUE), 2))
media_final_geral_feijao <- (itasa + sabor.sul + caldo.gostoso) / 3 #média final do produto
media.feijao <- rename(media_final_geral_feijao, Feijão = media) #renomeando a coluna
media.feijao <- mutate(media.feijao, Feijão = round(Feijão, 2)) #arredonando as casas decimais
media.feijao$Feijão <- round(media.feijao$Feijão * 4.5, 2) #multiplicando pela quantidade da CB
sol <- dados_agrupados %>%
summarise(media = round(mean(Sol, na.rm = TRUE), 2))
anaconda <- dados_agrupados %>%
summarise(media = round(mean(Anaconda, na.rm = TRUE), 2))
tradicao <- dados_agrupados %>%
summarise(media = round(mean(Tradição, na.rm = TRUE), 2))
media_final_geral_trigo <- (sol + anaconda + tradicao) / 3 #média final do produto
media.trigo <- rename(media_final_geral_trigo, Trigo = media) #renomeando a coluna
media.trigo <- mutate(media.trigo, Trigo = round(Trigo, 2)) #arredonando as casas decimais
media.trigo$Trigo <- round(media.trigo$Trigo * 0.3, 2) #multiplicando pela quantidade da CB
arroz1 <- dados_agrupados %>%
summarise(media = round(mean(Rampinelli, na.rm = TRUE), 2))
arroz2 <- dados_agrupados %>%
summarise(media = round(mean(Sabor.Sul.1, na.rm = TRUE), 2))
arroz3 <- dados_agrupados %>%
summarise(media = round(mean(Tio.João, na.rm = TRUE), 2))
media_final_geral_arroz <- (arroz1 + arroz2 + arroz3) / 3 #média final do produto
media.arroz <- rename(media_final_geral_arroz, Arroz = media) #renomeando a coluna
media.arroz <- mutate(media.arroz, Arroz = round(Arroz, 2)) #arredonando as casas decimais
media.arroz$Arroz <- media.arroz$Arroz * 0.6 #multiplicando pela quantidade da CB
cafe1 <- dados_agrupados %>%
summarise(media = round(mean(Caboclo, na.rm = TRUE), 2))
cafe2 <- dados_agrupados %>%
summarise(media = round(mean(Mellita, na.rm = TRUE), 2))
cafe3 <- dados_agrupados %>%
summarise(media = round(mean(Itamaraty, na.rm = TRUE), 2))
media_final_geral_cafe <- (cafe1 + cafe2 + cafe3) / 3 #média final do produto
media.cafe <- rename(media_final_geral_cafe, Café = media) #renomeando a coluna
media.cafe <- mutate(media.cafe, Café = round(Café, 2)) #arredonando as casas decimais
media.cafe$Café <- media.cafe$Café * 1.2 #multiplicando pela quantidade da CB
media.cafe <- mutate(media.cafe, Café = round(Café, 2))
acucar1 <- dados_agrupados %>%
summarise(media = round(mean(Alto.Alegre, na.rm = TRUE), 2))
acucar2 <- dados_agrupados %>%
summarise(media = round(mean(Estrela, na.rm = TRUE), 2))
acucar3 <- dados_agrupados %>%
summarise(media = round(mean(Doceçúcar, na.rm = TRUE), 2))
media_final_geral_acucar <- (acucar1 + acucar2 + acucar3) / 3
media.acucar <- rename(media_final_geral_acucar, Açúcar = media)
media.acucar <- mutate(media.acucar, Açúcar = round(Açúcar, 2))
media.acucar$Açúcar <- media.acucar$Açúcar * 0.6
media.acucar <- mutate(media.acucar, Açúcar = round(Açúcar, 2))
oleo1 <- dados_agrupados %>%
summarise(media = round(mean(Liza, na.rm = TRUE), 2))
oleo2 <- dados_agrupados %>%
summarise(media = round(mean(Coamo, na.rm = TRUE), 2))
oleo3 <- dados_agrupados %>%
summarise(media = round(mean(Concórdia, na.rm = TRUE), 2))
media_final_geral_oleo <- (oleo1 + oleo2 + oleo3) / 3
media.oleo <- rename(media_final_geral_oleo, Óleo = media)
media.oleo <- mutate(media.oleo, Óleo = round(Óleo, 2))
media.oleo$Óleo <- media.oleo$Óleo * 1
media.oleo <- mutate(media.oleo, Óleo = round(Óleo, 2))
margarina1 <- dados_agrupados %>%
summarise(media = round(mean(Qualy, na.rm = TRUE), 2))
margarina2 <- dados_agrupados %>%
summarise(media = round(mean(Delícia, na.rm = TRUE), 2))
margarina3 <- dados_agrupados %>%
summarise(media = round(mean(Doriana, na.rm = TRUE), 2))
media_final_geral_margarina <- (margarina1 + margarina2 + margarina3) / 3
media.margarina <- rename(media_final_geral_margarina, Margarina = media)
media.margarina <- mutate(media.margarina, Margarina = round(Margarina, 2))
media.margarina$Margarina <- media.margarina$Margarina * 1.5
media.margarina <- mutate(media.margarina, Margarina = round(Margarina, 2))
pao <- dados_agrupados %>%
summarise(media = round(mean(Pão, na.rm = TRUE), 2))
media.pao <- rename(pao, Pão = media)
media.pao$Pão <- media.pao$Pão * 6
batata <- dados_agrupados %>%
summarise(media = round(mean(Batata, na.rm = TRUE), 2))
media.batata <- rename(batata, Batata = media)
media.batata$Batata <- media.batata$Batata * 6
tomate <- dados_agrupados %>%
summarise(media = round(mean(Tomate, na.rm = TRUE), 2))
media.tomate <- rename(tomate, Tomate = media)
media.tomate$Tomate <- media.tomate$Tomate * 9
banana <- dados_agrupados %>%
summarise(media = round(mean(Banana, na.rm = TRUE), 2))
media.banana <- rename(banana, Banana = media)
media.banana$Banana <- media.banana$Banana * 6
carne1 <- dados_agrupados %>%
summarise(media = round(mean(Patinho, na.rm = TRUE), 2))
carne2 <- dados_agrupados %>%
summarise(media = round(mean(Coxão.duro.posta, na.rm = TRUE), 2))
carne3 <- dados_agrupados %>%
summarise(media = round(mean(Coxão.mole, na.rm = TRUE), 2))
media_final_geral_carne <- (carne1 + carne2 + carne3) / 3
media.carne <- rename(media_final_geral_carne, Carne = media)
media.carne <- mutate(media.carne, Carne = round(Carne, 2))
media.carne$Carne <- media.carne$Carne * 6.60
media.carne <- mutate(media.carne, Carne = round(Carne, 2))
# Lista de data frames de produtos
lista_data_frames <- list(media.acucar, media.arroz, media.banana, media.batata,
media.cafe, media.feijao, media.carne, media.leite, media.margarina,
media.oleo, media.pao, media.tomate, media.trigo)
todos_anos <- 2018:2024  # Exemplo: de 2021 a 2024
# Criar uma sequência de todos os meses do ano
todos_meses <- 1:12
# Criar um data frame base com todas as combinações de anos e meses
todas_datas <- expand.grid(ano = todos_anos, mes = todos_meses)
# Função para realizar o left_join
join_func <- function(base, df) {
left_join(base, df, by = c("mes", "ano"))
}
# Aplicar a função left_join a todos os data frames de produtos
CBA <- Reduce(join_func, lista_data_frames)
CBA.liq <- mutate(CBA, Custo = rowSums(select(CBA, -ano, -mes), na.rm = TRUE))
excluir <- c("Açúcar","Arroz", "Banana", "Batata","Café","Feijão", "Carne","Leite",
"Margarina","Óleo", "Pão", "Tomate", "Trigo")
Cesta.basica <- CBA.liq[,!names(CBA.liq)%in%excluir]
Cesta.basica <- mutate(Cesta.basica, Custo = round(Custo, 2))
Cesta.basica$mes <- month(Cesta.basica$mes, label = TRUE, abbr = TRUE, locale = "pt")
view(Cesta.basica)
